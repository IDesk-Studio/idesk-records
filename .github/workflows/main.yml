name: 'Build'

on:
  workflow_dispatch:
    inputs:
      obs_version:
        description: OBS Version
        required: true
      idesk_version:
        description: iDesk Version
        required: true

env:
  CACHE_REVISION: '006'
  CEF_BUILD_VERSION_LINUX: '5060'
  CEF_BUILD_VERSION_WIN: '5060'
  QT_VERSION_MAC: '6.4.3'
  QT_VERSION_WIN: '6.4.3'
  DEPS_VERSION_WIN: '2023-06-01'
  VLC_VERSION_WIN: '3.0.0-git'
  TWITCH_CLIENTID: ${{ secrets.TWITCH_CLIENT_ID }}
  TWITCH_HASH: ${{ secrets.TWITCH_HASH }}
  RESTREAM_CLIENTID: ${{ secrets.RESTREAM_CLIENTID }}
  RESTREAM_HASH: ${{ secrets.RESTREAM_HASH }}
  YOUTUBE_CLIENTID: ${{ secrets.YOUTUBE_CLIENTID }}
  YOUTUBE_CLIENTID_HASH: ${{ secrets.YOUTUBE_CLIENTID_HASH }}
  YOUTUBE_SECRET: ${{ secrets.YOUTUBE_SECRET }}
  YOUTUBE_SECRET_HASH: ${{ secrets.YOUTUBE_SECRET_HASH }}
  GPU_PRIORITY_VAL: ${{ secrets.GPU_PRIORITY_VAL }}
  OBS_VERSION_OVERRIDE: ${{ github.event.inputs.idesk_version }}
  OBS_VERSION: ${{ github.event.inputs.obs_version }}

jobs:
  build:
    name: Build
    runs-on: windows-2022
    strategy:
      matrix:
        arch: [x64, x86]
    env:
      CMAKE_GENERATOR: 'Visual Studio 17 2022'
      CMAKE_SYSTEM_VERSION: '10.0.18363.657'
      VIRTUALCAM-GUID: 'A3FCE0F5-3493-419F-958A-ABA1250EC20B'
      BUILD_FOR_DISTRIBUTION: ${{ startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request' }}
    defaults:
      run:
        working-directory: 'obs-studio'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          path: 'obs-studio'
          fetch-depth: 0

      - name: 'Edit settings of plugins'
        shell: bash
        run: |
          CONFIG="plugins/obs-websocket/src/Config.cpp"
          sed -i 's|ServerEnabled(false)|ServerEnabled(true)|' $CONFIG
          sed -i 's|AuthRequired(true)|AuthRequired(false)|'   $CONFIG
          sed -i 's|AlertsEnabled(false)|AlertsEnabled(true)|' $CONFIG

      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1.1

      - name: 'Install dependencies'
        run: CI/windows/01_install_dependencies.ps1 -BuildArch ${{ matrix.arch }}

      - name: 'Build OBS'
        run: CI/windows/02_build_obs.ps1 -BuildArch ${{ matrix.arch }} -BuildConfiguration MinSizeRel

      - name: 'Create build artifact'
        run: |
          CI/windows/03_package_obs.ps1 -BuildArch ${{ matrix.arch }} -Package
          $ArtifactName = Get-ChildItem -filter "obs-studio-*-windows-${{ matrix.arch }}.zip" -File
          Write-Output "FILE_NAME=${ArtifactName}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v3
        with:
          name: 'obs-studio-windows-${{ matrix.arch }}'
          path: '${{ env.FILE_NAME }}'

  windows_package:
    name: Windows Package
    runs-on: windows-latest
    needs: windows_build
    env:
      BUILD_FOR_DISTRIBUTION: 'ON'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1.1

      - name: 'Download 64-bit artifact'
        uses: actions/download-artifact@v3
        with:
          name: 'obs-studio-windows-x64'

      - name: 'Download 32-bit artifact'
        uses: actions/download-artifact@v3
        with:
          name: 'obs-studio-windows-x86'

      - name: 'Unpack Windows build artifacts'
        run: |
          if (!(Test-Path install_temp)) {
            $null = New-Item -ItemType Directory -Force -Path install_temp
          }
          Expand-Archive -Path "$(Get-ChildItem -filter "obs-studio-*-windows-x86.zip" -File)" -DestinationPath install_temp
          Expand-Archive -Path "$(Get-ChildItem -filter "obs-studio-*-windows-x64.zip" -File)" -Force -DestinationPath install_temp
          CI/windows/03_package_obs.ps1 -CombinedArchs -Package
          $ArtifactName = (Get-ChildItem -filter "obs-studio-*-windows-x86+x64.zip" -File).Name
          Move-Item $ArtifactName records.zip

      - name: Upload the zip
        uses: softprops/action-gh-release@v1
        if: always()
        with:
          name: ${{ env.OBS_VERSION }}
          tag_name: ${{ env.OBS_VERSION }}
          body: 'for iDesk Studio ${{ env.OBS_VERSION_OVERRIDE }}'
          files: records.zip